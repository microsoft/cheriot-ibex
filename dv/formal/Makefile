# Copyright lowRISC contributors.
# Copyright 2024 University of Oxford, see also CREDITS.md.
# Licensed under the Apache License, Version 2.0 (see LICENSE for details).
# Original Author: Louis-Emile Ploix
# SPDX-License-Identifier: Apache-2.0

.DEFAULT_GOAL := all

IBEX_ROOT=../..

SAIL=sail

SAIL_RISCV_MODEL_DIR=${LOWRISC_CHERIOT_SAIL_SRC}/sail-riscv/model
CHERI=../../src

include Sources.mk

PSGEN_SRCS=thm/btype.proof thm/ibex.proof thm/mem.proof thm/riscv.proof thm/dti.proof
PSGEN_FLAGS=-root riscv -task

SAIL_EXTRA_SRCS=../spec/main.sail

SAIL_UNREACHABLE=translate lookup_TLB translate_tlb_miss translate_tlb_hit pt_walk
SAIL_UNREACHABLE+=pmpReadCfgReg pmpReadAddrReg pmpWriteCfg pmpWriteCfgReg pmpWriteAddr pmpWriteAddrReg mseccfgWrite
SAIL_UNREACHABLE+=pmpAddrRange pmpCheckRWX pmpCheckPerms pmpMatchAddr pmpMatchEntry accessToFault

SAIL_EXTRACTED=encCapabilityToCapability capToEncCap bit_to_bool bool_to_bit to_bits zero_extend capBitsToCapability capBitsToEncCapability
SAIL_CULL=count_trailing_zeros

SAIL_SV_FLAGS=-sv -sv-comb -sv-inregs -sv-outregs -sv-nostrings -sv-nopacked -sv-nomem -Oconstant_fold -memo-z3 \
	$(addprefix -sv-unreachable ,$(SAIL_UNREACHABLE)) \
	-sv-fun2wires 2:read_ram \
	-sv-fun2wires 2:write_ram \
	-sv-fun2wires wX \
	-sv-fun2wires wC \
	-sv-fun2wires __WriteRAM_Meta \
	-sv-fun2wires __ReadRAM_Meta \
	-sv-fun2wires mem_read_cap_revoked

# Use fusesoc to resolve the tree of components, copy all resolved source files into the build/ directory,
# and then generate a filelist for jasper to ingest.
# Finally, apply a number of small RTL patches necessary to make the formal flow work. (see files in patches/)
# (Only patch the duplicated source files that fusesoc has copied into build/fusesoc/src, not the version-controlled originals)
# - Note. we use the 'vcs' fusesoc backend flow to generate the filelist. This is because fusesoc does not currently implement a
#   JasperGold backend, but this is not an issue as the file-format generated by the vcs flow is compatible with jasper.
.PHONY: fusesoc
fusesoc:
	mkdir -p build/fusesoc
	fusesoc \
		--cores-root $(IBEX_ROOT) \
		run \
		--build-root build/fusesoc \
		--tool vcs \
		--setup \
		lowrisc:ibex:ibex_formal:0.1
	patch -p0 < patches/ibex_top.diff

.PHONY: sv
sv:
	mkdir -p build
	cd build && $(SAIL) $(SAIL_SRCS) $(SAIL_EXTRA_SRCS) $(SAIL_SV_FLAGS) $(addprefix -sv_unreachable execute_,$(COMPRESSED_INSTRS)) -o ibexspec
	python3 spec/fix_pmp_bug.py
	python3 spec/unreachable_loc_info.py
	python3 spec/extract_funcs.py $(SAIL_EXTRACTED) > build/extracted.sv
	python3 spec/cull_funcs.py $(SAIL_CULL)

.PHONY: extract
extract:
	python3 spec/extract_funcs.py $(SAIL_EXTRACTED) > build/extracted.sv

.PHONY: psgen
psgen:
	mkdir -p build
	psgen $(addprefix -path ,$(PSGEN_SRCS)) $(PSGEN_FLAGS) -sv-out build/psgen.sv -tcl-out build/psgen.tcl
.PHONY: jg
jg: fusesoc psgen sv
	jg verify.tcl -allow_unsupported_OS -acquire_proj

# The following default target is intended for regressions / unattended runs.
.PHONY: all
all: fusesoc psgen sv
	jg automated.tcl -allow_unsupported_OS -acquire_proj -no_gui

################################################################################

.PHONY: clean
clean:
	rm -rf build/
	rm -rf jgproject/
	rm -rf jgproofs/
